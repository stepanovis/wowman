"""Initial tables

Revision ID: 818750be4886
Revises: 
Create Date: 2025-09-30 21:27:18.009447

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '818750be4886'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('preferred_language', sa.String(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_active_at', sa.DateTime(), nullable=True),
    sa.Column('commands_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('cycles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('cycle_length', sa.Integer(), nullable=False),
    sa.Column('period_length', sa.Integer(), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.CheckConstraint('cycle_length >= 21 AND cycle_length <= 40', name='check_cycle_length'),
    sa.CheckConstraint('period_length >= 1 AND period_length <= 10', name='check_period_length'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cycles_is_current'), 'cycles', ['is_current'], unique=False)
    op.create_index(op.f('ix_cycles_start_date'), 'cycles', ['start_date'], unique=False)
    op.create_index(op.f('ix_cycles_user_id'), 'cycles', ['user_id'], unique=False)
    op.create_table('notification_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_log_sent_at'), 'notification_log', ['sent_at'], unique=False)
    op.create_index(op.f('ix_notification_log_status'), 'notification_log', ['status'], unique=False)
    op.create_index(op.f('ix_notification_log_user_id'), 'notification_log', ['user_id'], unique=False)
    op.create_table('notification_settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('time_offset', sa.Integer(), nullable=False),
    sa.Column('custom_time', sa.Time(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'notification_type', name='unique_user_notification_type')
    )
    op.create_index(op.f('ix_notification_settings_is_enabled'), 'notification_settings', ['is_enabled'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notification_settings_is_enabled'), table_name='notification_settings')
    op.drop_table('notification_settings')
    op.drop_index(op.f('ix_notification_log_user_id'), table_name='notification_log')
    op.drop_index(op.f('ix_notification_log_status'), table_name='notification_log')
    op.drop_index(op.f('ix_notification_log_sent_at'), table_name='notification_log')
    op.drop_table('notification_log')
    op.drop_index(op.f('ix_cycles_user_id'), table_name='cycles')
    op.drop_index(op.f('ix_cycles_start_date'), table_name='cycles')
    op.drop_index(op.f('ix_cycles_is_current'), table_name='cycles')
    op.drop_table('cycles')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
